/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/reset.h>

#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4
#define BT5 BT_SEL 5

/ {

    combos {
        compatible = "zmk,combos";

        combo_procreate_layer {
            timeout-ms = <50>;
            key-positions = <0 12>;
            bindings = <&tog 4>;
        };

    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
                &kp TAB     &kp Q       &kp W       &kp E       &kp R       &kp T                               &kp Y       &kp U       &kp I       &kp O       &kp P       &mo 4
                &none       &kp A       &kp S       &kp D       &kp F       &kp G                               &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
                &none       &kp Z       &kp X       &kp C       &kp V       &kp B                               &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &none
                                                                &kp LSHIFT  &kp BSPC    &lt 2 ESC   &lt 1 RET   &kp SPACE   &kp RSHIFT 
            >;
        };

        arrow_layer {
            bindings = <
                &none       &none       &none       &none       &none       &none                               &none       &none       &none       &none       &none       &none
                &kp PG_UP   &kp LEFT    &kp UP      &kp DOWN    &kp RIGHT   &kp PG_DN                           &none       &sk RSHIFT  &sk RCTRL   &sk RGUI    &sk RALT    &none
                &none       &none       &none       &none       &none       &none                               &none       &none       &none       &none       &none       &none
                                                                &kp CAPS    &kp DEL     &trans      &trans      &none       &none
            >;
        };

        number_layer {
            bindings = <
                &none       &none       &none       &none       &none       &none                               &kp LBKT    &kp N7      &kp N8      &kp N9      &kp RBKT    &none
                &none       &sk LALT    &sk LGUI    &sk LCTRL   &sk LSHIFT  &none                               &kp MINUS   &kp N4      &kp N5      &kp N6      &kp EQUAL   &none
                &none       &none       &none       &none       &none       &none                               &kp GRAVE   &kp N1      &kp N2      &kp N3      &kp BSLH    &none
                                                                &none       &none       &trans       &trans     &kp N0      &kp DOT
            >;
        };

        movement_layer {
            bindings = <
                &none       &none       &none       &none       &none       &none                               &none       &none       &none       &none       &none       &none
                &none       &sk LALT    &sk LGUI    &sk LCTRL   &sk LSHIFT  &none                               &kp H       &kp J       &kp K       &kp L       &kp SEMI    &none
                &none       &none       &none       &none       &none       &none                               &none       &none       &none       &none       &none       &none
                                                                &none       &none       &trans       &trans     &none       &none 
            >;
        };

        settings_layer {
            bindings = <
                &bt BT0     &bt BT1     &bt BT2     &bt BT3     &bt BT4     &bt BT5                             &none       &none       &none       &none       &none       &trans
                &none       &none       &none       &none       &none       &none                               &none       &none       &none       &none       &none       &bt BT_CLR
                &none       &none       &none       &none       &none       &none                               &none       &none       &none       &none       &none       &none
                                                                &none       &none       &none       &none       &none       &none
            >;
        };

    };
};
